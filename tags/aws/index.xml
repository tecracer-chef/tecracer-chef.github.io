<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aws on tecRacer Chef</title><link>https://tecracer-chef.github.io/tags/aws.html</link><description>Recent content in Aws on tecRacer Chef</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tecracer-chef.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Logging Amazon FSx for NetApp ONTAP</title><link>https://tecracer-chef.github.io/2022/04/logging-amazon-fsx-for-netapp-ontap.html</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2022/04/logging-amazon-fsx-for-netapp-ontap.html</guid><description>&lt;p>Recently, I spent a lot of time using the exciting new member of the FSx family. One detail made working with it a bit unpleasant, though - the lack of log files.&lt;/p>
&lt;p>This post details how to create a custom integration into CloudWatch Logs and make ONTAP audit logs visible.&lt;/p></description></item><item><title>Testing Terraform with InSpec (Part 1)</title><link>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1.html</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1.html</guid><description>While Infrastructure-as-Code slowly becomes omnipresent, many of the communicated advantages of the approach stay mostly unrealized. Sure, code style checks (linting) and even automated documentation get more common every month. But one of the cornerstones often gets ignore: testing.
Let&amp;rsquo;s see which types of code testing are available and how to do it without writing too much code.
The promise of the Infrastructure-as-Code (short: IaC) movement is to handle infrastructure just as if it was a program.</description></item></channel></rss>
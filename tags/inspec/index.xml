<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>inspec on tecRacer Chef</title><link>https://tecracer-chef.github.io/tags/inspec/</link><description>Recent content in inspec on tecRacer Chef</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tecracer-chef.github.io/tags/inspec/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing Terraform with InSpec (Part 1)</title><link>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1/</guid><description>While Infrastructure-as-Code slowly becomes omnipresent, many of the communicated advantages of the approach stay mostly unrealized. Sure, code style checks (linting) and even automated documentation get more common every month. But one of the cornerstones often gets ignore: testing.
Let&amp;rsquo;s see which types of code testing are available and how to do it without writing too much code.
The promise of the Infrastructure-as-Code (short: IaC) movement is to handle infrastructure just as if it was a program.</description></item><item><title>Air-Gapped Compliance Scans with InSpec</title><link>https://tecracer-chef.github.io/2020/10/air-gapped-compliance-scans-with-inspec/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/10/air-gapped-compliance-scans-with-inspec/</guid><description>&lt;p>&lt;a href="https://www.chef.io/products/chef-inspec">Chef InSpec&lt;/a> offers the possibility to scan any type of device using community-authored compliance profiles. As InSpec needs to connect to the machines, networking and firewall rules make this task tricky in bigger environments.&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
With the newly released &lt;code>train-awsssm&lt;/code> plugin, this situation changes drastically. Read on, if you want to know how.&lt;/p></description></item><item><title>Mit allen verbunden Teil 2</title><link>https://tecracer-chef.github.io/2019/01/mit-allen-verbunden-teil-2/</link><pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/01/mit-allen-verbunden-teil-2/</guid><description>Infrastrukturtest des Transit Gateway mit kitchen und Inspec
Transit Gateway (What is a Transit Gateway? – Amazon Virtual Private Cloud) ist ein neuer AWS Service, der VPC Peering komplett ablösen kann. Zusätzlich kann damit auch ein „transitives&amp;quot; Peering gebaut werden. Das heißt, anders als bei einer VPC Peering Verbindung, die immer nur zwei VPCs miteinander verbindet, werden hier alle Netze miteinander verbunden. Das lohnt es sich genau zu testen! Diesen Test will ich hier möglichst vollautomatisiert aufbauen.</description></item></channel></rss>
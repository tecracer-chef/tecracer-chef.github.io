<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Test Kitchen on tecRacer Chef</title><link>https://tecracer-chef.github.io/categories/test-kitchen.html</link><description>Recent content in Test Kitchen on tecRacer Chef</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tecracer-chef.github.io/categories/test-kitchen/index.xml" rel="self" type="application/rss+xml"/><item><title>Dedicated Hosts with Test Kitchen</title><link>https://tecracer-chef.github.io/2022/12/dedicated-hosts-with-test-kitchen.html</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2022/12/dedicated-hosts-with-test-kitchen.html</guid><description>&lt;p>Sometimes, you need to deploy software for tests with special licensing terms. To solve this, AWS offers Dedicated Instances and Dedicated Hosts - and now you can use them with &lt;a href="https://kitchen.ci">Test Kitchen 3.14&lt;/a> in your developer workflows.&lt;/p></description></item><item><title>Test-Kitchen on AWS (2022 edition)</title><link>https://tecracer-chef.github.io/2022/11/test-kitchen-on-aws-2022-edition.html</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2022/11/test-kitchen-on-aws-2022-edition.html</guid><description>&lt;p>Test-Kitchen is a tool to manage your test machine lifecycle, similar to HashiCorp Vagrant. While it has been developed with Chef in mind, it can be used with any development tool to test on new machines every time you change your code.&lt;/p>
&lt;p>As this tool continues to evolve and many examples are outdated, today I will give you some small snippets to reuse and get going quickly.&lt;/p></description></item><item><title>Update your Style in Test Kitchen (Part 2)</title><link>https://tecracer-chef.github.io/2021/10/update-your-style-in-test-kitchen-part-2.html</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2021/10/update-your-style-in-test-kitchen-part-2.html</guid><description>&lt;p>It is time for a follow-up to my &lt;a href="https://aws-blog.de/2020/06/update-your-style-in-test-kitchen.html">blog post from last year&lt;/a> - especially as Test Kitchen 3.0 changed some defaults. Let&amp;rsquo;s check some cargo-culted settings out in this blog post.&lt;/p></description></item><item><title>Mocking data in Test Kitchen (Part 2)</title><link>https://tecracer-chef.github.io/2020/08/mocking-data-in-test-kitchen-part-2.html</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/08/mocking-data-in-test-kitchen-part-2.html</guid><description>&lt;p>Going beyond the easier use case of mocking attributes and databags, we sometimes want to fake some data about the system itself.&lt;/p></description></item><item><title>Mocking data in Test Kitchen</title><link>https://tecracer-chef.github.io/2020/08/mocking-data-in-test-kitchen.html</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/08/mocking-data-in-test-kitchen.html</guid><description>&lt;p>The more complex your cookbooks, the bigger the need to supply some external information to your test machines. Passing specific attributes, values of databags or secrets for testing become necessary. We will go through these use cases and show how to mock the data in this post.&lt;/p></description></item><item><title>Update your Style in Test Kitchen</title><link>https://tecracer-chef.github.io/2020/06/update-your-style-in-test-kitchen.html</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/06/update-your-style-in-test-kitchen.html</guid><description>&lt;p>It is surprising how many resources on the Internet are carrying on outdated or deprecated information - the Chef ecosystem is no exception to this. While outdated style in Ruby files has been detected via &lt;code>cookstyle&lt;/code> for a while, Test Kitchen files still have no sanity checks yet.&lt;/p>
&lt;p>Let&amp;rsquo;s see what changed in this short post.&lt;/p></description></item><item><title>Testing Physical Machines with kitchen-static (Part 2)</title><link>https://tecracer-chef.github.io/2020/05/testing-physical-machines-with-kitchen-static-part-2.html</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/05/testing-physical-machines-with-kitchen-static-part-2.html</guid><description>&lt;h1 id="testing-on-physical-machines---part-2">Testing on Physical Machines - Part 2&lt;/h1>
&lt;p>After introducing how to work with physical machines and Test Kitchen last time, we will look at a feature to allow central orchestration of available machines.&lt;/p></description></item><item><title>Testing Physical Machines with kitchen-static</title><link>https://tecracer-chef.github.io/2020/04/testing-physical-machines-with-kitchen-static.html</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2020/04/testing-physical-machines-with-kitchen-static.html</guid><description>&lt;h1 id="testing-on-physical-machines-with-kitchen-static">Testing on Physical Machines with kitchen-static&lt;/h1>
&lt;p>This article shows how to work with Test Kitchen on physical machines using the &lt;a href="https://github.com/tecracer-theinen/kitchen-static">kitchen-static Driver&lt;/a>. If you need to deliver a product (bundle of server and software) instead of just configuration, some tasks cannot be run on virtual machines alone but need testing on actual hardware.&lt;/p></description></item><item><title>Instant Clones with kitchen-vcenter</title><link>https://tecracer-chef.github.io/2019/10/instant-clones-with-kitchen-vcenter.html</link><pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/10/instant-clones-with-kitchen-vcenter.html</guid><description>&lt;h1 id="instant-clones-with-kitchen-vcenter">Instant Clones with kitchen-vcenter&lt;/h1>
&lt;p>Over the last few posts we optimized our kitchen-vcenter setups and are stuck with the usual, long boot times of Windows systems. Surprisingly, VMware introduced a feature which can help us get rid of those. For good.&lt;/p></description></item><item><title>Guest Operations and kitchen-vcenter</title><link>https://tecracer-chef.github.io/2019/10/guest-operations-and-kitchen-vcenter.html</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/10/guest-operations-and-kitchen-vcenter.html</guid><description>&lt;h1 id="guest-operations-and-kitchen-vcenter">Guest Operations and kitchen-vcenter&lt;/h1>
&lt;p>In this part of the blog series, we will look on how to speed up IP discovery of new machines with a little-known feature of the VMware Tools.&lt;/p></description></item><item><title>Linked Clones with kitchen-vcenter</title><link>https://tecracer-chef.github.io/2019/10/linked-clones-with-kitchen-vcenter.html</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/10/linked-clones-with-kitchen-vcenter.html</guid><description>&lt;h1 id="linked-clones-with-kitchen-vcenter">Linked Clones with kitchen-vcenter&lt;/h1>
&lt;p>Quickly starting new Test Kitchen machines is one of the main concerns for getting the desired feedback cycles in cookbook development. While machines get created as a full clone by default, the kitchen-vcenter driver offers a better alternative.&lt;/p></description></item><item><title>The kitchen-vcenter Driver</title><link>https://tecracer-chef.github.io/2019/09/the-kitchen-vcenter-driver.html</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/09/the-kitchen-vcenter-driver.html</guid><description>&lt;h1 id="the-kitchen-vcenter-driver">The kitchen-vcenter Driver&lt;/h1>
&lt;p>While many companies already rely on some Cloud for all of their IT systems, bigger enterprise customers often have own data centers which consist of thousands of virtual machines. Under these circumstances, it is often not desirable to only test Chef cookbooks on AWS or Azure, but doing this in the real environment is a better idea. The &lt;code>kitchen-vcenter&lt;/code> driver allows you to harness the power of your own IT systems.&lt;/p></description></item><item><title>The kitchen-ec2 Driver</title><link>https://tecracer-chef.github.io/2019/09/the-kitchen-ec2-driver.html</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/09/the-kitchen-ec2-driver.html</guid><description>&lt;h1 id="the-kitchen-ec2-driver">The kitchen-ec2 Driver&lt;/h1>
&lt;p>Within the Chef ecosystem, Test Kitchen is one of the most useful tools. It offers the possibility to quickly test cookbooks in different OS environments on machines with a limited lifetime. That way, you can check if your fancy recipes work the same on RedHat, Centos 6 and Ubuntu. As speed is king, this fast feedback motivates more for early testing and reduces the amount of bugs found in production.&lt;/p></description></item><item><title>Chef Cookbooks und Kitchen</title><link>https://tecracer-chef.github.io/2019/03/chef-cookbooks-und-kitchen.html</link><pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/03/chef-cookbooks-und-kitchen.html</guid><description>AWS hat Chef als Technologiepartner. Da nicht nur AWS Chef in ihren Services wie OpsWorks oder OpsWorks Chef Automate nutzt, sondern auch wir, möchte ich eine kurze Einführung von Chef und Test-Kitchen geben.
In diesem Teil werden wir feststellen, wie schnell es geht, ein Testsystem mit den richtigen Mitteln zu erstellen. Im nächsten Teil werden wir das Ganze noch weiter verfeinern.
Chef Cookbooks und Kitchen Warum Chef und was hat das mit AWS zu tun?</description></item></channel></rss>
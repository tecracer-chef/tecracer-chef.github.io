<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on tecRacer Chef</title><link>https://tecracer-chef.github.io/categories/aws.html</link><description>Recent content in AWS on tecRacer Chef</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tecracer-chef.github.io/categories/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Logging Amazon FSx for NetApp ONTAP</title><link>https://tecracer-chef.github.io/2022/04/logging-amazon-fsx-for-netapp-ontap.html</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2022/04/logging-amazon-fsx-for-netapp-ontap.html</guid><description>&lt;p>Recently, I spent a lot of time using the exciting new member of the FSx family. One detail made working with it a bit unpleasant, though - the lack of log files.&lt;/p>
&lt;p>This post details how to create a custom integration into CloudWatch Logs and make ONTAP audit logs visible.&lt;/p></description></item><item><title>Testing Terraform with InSpec (Part 1)</title><link>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1.html</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2021/10/testing-terraform-with-inspec-part-1.html</guid><description>While Infrastructure-as-Code slowly becomes omnipresent, many of the communicated advantages of the approach stay mostly unrealized. Sure, code style checks (linting) and even automated documentation get more common every month. But one of the cornerstones often gets ignore: testing.
Let&amp;rsquo;s see which types of code testing are available and how to do it without writing too much code.
The promise of the Infrastructure-as-Code (short: IaC) movement is to handle infrastructure just as if it was a program.</description></item><item><title>CDK Infrastructure Testing - Part 2a - Implement Unit, Integration and Application Test for CDK Infrastructure and an EC2 Web Server Application</title><link>https://tecracer-chef.github.io/cdk-cit-part2a/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/cdk-cit-part2a/</guid><description>&lt;p>With CDK you create Infrastructure as Code - IaC. You can automate the test for the IaC code.
The three test tastes -Unit, Integration and Application- should work closely together. Here I show you how. It is like the three steps of coffee tasting: 1 smell, 2 Taste, 3 Feel.&lt;/p></description></item><item><title>CIT - Build CDK Infrastructure Testing - Part 1 - Terratest and the Integrated Integration</title><link>https://tecracer-chef.github.io/2021/05/cit-build-cdk-infrastructure-testing-part-1-terratest-and-the-integrated-integration.html</link><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2021/05/cit-build-cdk-infrastructure-testing-part-1-terratest-and-the-integrated-integration.html</guid><description>&lt;h1 id="heading">&lt;/h1>
&lt;p>TL;DR You don`t need a DSL to do easy integration testing. With CDK available in go, infrastructure test can be programmed with GO packages easily.&lt;/p></description></item><item><title>Mit allen verbunden Teil 2</title><link>https://tecracer-chef.github.io/2019/01/mit-allen-verbunden-teil-2.html</link><pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate><guid>https://tecracer-chef.github.io/2019/01/mit-allen-verbunden-teil-2.html</guid><description>Infrastrukturtest des Transit Gateway mit kitchen und Inspec
Transit Gateway (What is a Transit Gateway? – Amazon Virtual Private Cloud) ist ein neuer AWS Service, der VPC Peering komplett ablösen kann. Zusätzlich kann damit auch ein „transitives&amp;quot; Peering gebaut werden. Das heißt, anders als bei einer VPC Peering Verbindung, die immer nur zwei VPCs miteinander verbindet, werden hier alle Netze miteinander verbunden. Das lohnt es sich genau zu testen! Diesen Test will ich hier möglichst vollautomatisiert aufbauen.</description></item></channel></rss>